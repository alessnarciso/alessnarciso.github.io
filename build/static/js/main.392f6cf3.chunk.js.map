{"version":3,"sources":["components/FeatureCard.js","components/IntroDetails.js","components/Intro.js","components/ColorModeSwitcher.js","components/NavBar.js","components/ExpEntry.js","components/Experience.js","components/Skills.js","components/SocialButton.js","assets/lora-product.png","assets/cancer-detection.png","assets/capstone-proj.png","assets/restaurater.png","components/ProjectCard.js","components/Projects.js","components/Footer.js","pages/Homepage.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["FeatureCard","title","text","icon","motion","div","whileHover","scale","whileTap","p","shadow","borderWidth","color","useColorModeValue","zIndex","alignContent","align","paddingBottom","w","h","justify","rounded","bg","mb","as","fontWeight","fontSize","textTransform","base","sm","md","lg","xl","IntroDetails","columns","spacing","marginLeft","marginRight","FcAcceptDatabase","FcScatterPlot","FcCollaboration","FcCircuit","FcBullish","FcBiotech","Intro","position","minH","py","px","borderBottom","borderStyle","borderColor","maxW","center","direction","flex","bgGradient","bgClip","steps","fontFamily","marginInline","ColorModeSwitcher","props","toggleColorMode","useColorMode","SwitchIcon","FaMoon","FaSun","size","aria-label","variant","onClick","NavBar","useDisclosure","isOpen","onToggle","top","Close","Hamburger","textAlign","useBreakpointValue","paddingLeft","_hover","sendMail","in","animateOpacity","MobileNav","display","NAV_ITEMS","map","navItem","label","MobileNavItem","children","href","Link","textDecoration","ChevronDownIcon","transition","transform","style","marginTop","mt","pl","borderLeft","child","window","location","ExpEntry","job","company","letterSpacing","start","end","desc","centerContent","paddingTop","techs","tech","borderRadius","colorScheme","Experience","jobs","id","StatsGridWithImage","stats","stat","content","SocialButton","button","cursor","alignItems","justifyContent","ToolTipSocialButton","tipColor","tipLabel","hasArrow","ProjectCard","project","imageUrl","capstoneImage","loraImage","cancerImage","restauraterImage","boxShadow","src","alt","imageAlt","object-fit","description","skills","skill","githubLink","isRepo","Projects","Project","projects","tabTitle","projectData","DataTabs","data","isFitted","overflowX","tab","index","Footer","Stack","Homepage","App","theme","extendTheme","config","initialColorMode","useSystemColorMode","flexBasis","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.392f6cf3.chunk.js","sourcesContent":["import {\n  Text,\n  Stack,\n  Flex,\n  Icon,\n  Box,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\n\nconst FeatureCard = ({ title, text, icon }) => {\n  return (\n    <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.8 }}>\n      <Box\n        p={8}\n        shadow=\"xl\"\n        borderWidth=\"2px\"\n        color={useColorModeValue('gray.800', 'white')}\n        zIndex={1}\n        alignContent=\"center\"\n      >\n        <Stack align=\"center\" paddingBottom={4}>\n          <Flex\n            w={18}\n            h={18}\n            align={'center'}\n            justify={'center'}\n            color={'ghost'}\n            rounded={'full'}\n            bg={'gray.100'}\n            mb={5}\n          >\n            <motion.div whileHover={{ scale: 1.2 }} whileTap={{ scale: 0.8 }}>\n              <Icon as={icon} w={10} h={10} />\n            </motion.div>\n          </Flex>\n          <Text\n            fontWeight={700}\n            fontSize=\"l\"\n            align=\"center\"\n            textTransform=\"uppercase\"\n            color=\"blue.500\"\n          >\n            {title}\n          </Text>\n\n          <Text\n            color={'gray.600'}\n            color={useColorModeValue('dark', 'light')}\n            align=\"center\"\n            fontSize=\"md\"\n            noOfLines={{ base: 10, sm: 5, md: 5, lg: 5, xl: 6 }}\n          >\n            {text}\n          </Text>\n        </Stack>\n      </Box>\n    </motion.div>\n  );\n};\n\nexport default FeatureCard;\n","import { Box, SimpleGrid } from '@chakra-ui/react';\nimport {\n  FcAcceptDatabase,\n  FcScatterPlot,\n  FcCollaboration,\n  FcCircuit,\n  FcBullish,\n  FcBiotech,\n} from 'react-icons/fc';\n\nimport FeatureCard from './FeatureCard';\n\nexport default function IntroDetails() {\n  return (\n    <Box p={4}>\n      <SimpleGrid\n        columns={{ base: 1, md: 1, lg: 1, xl: 3 }}\n        spacing={10}\n        marginLeft={4}\n        marginRight={4}\n      >\n        <FeatureCard\n          icon={FcAcceptDatabase}\n          title={'Back End Dev'}\n          text=\"Skilled with databases, cloud, and back end technologies like NodeJS, Express, Docker, and Kubernetes for the development and deployment of APIs and applications.\"\n        />\n        <FeatureCard\n          icon={FcScatterPlot}\n          title={'A.I.'}\n          text={\n            'Experienced with Python, Keras, and TensorFlow to solve supervised and unsupervised problems in areas like NLP and computer vision using various architectures.'\n          }\n        />\n        <FeatureCard\n          icon={FcCollaboration}\n          title={'Front End Dev'}\n          text={\n            'Experience in ReactJS and Figma to design and implement great user interfaces and experiences. Additional experience with Unity for augmented reality applications.'\n          }\n        />\n\n        <FeatureCard\n          icon={FcCircuit}\n          title={'Engineering'}\n          text={\n            'Strong engineering design thinking having implemented engineering projects in an array of sectors including biotech, IoT, telecommunications, and robotics in agile and collaborative environments.'\n          }\n        />\n        <FeatureCard\n          icon={FcBullish}\n          title={'Business & Leadership'}\n          text={\n            'Proven leadership spearheading projects to exceed stakeholder objectives. History of developing solutions that save costs and generate revenue to benefit company bottom lines.'\n          }\n        />\n\n        <FeatureCard\n          icon={FcBiotech}\n          title={'Biotech'}\n          text={\n            'Awarded as a global biotech leader by Global Biotech Revolution. Led 90+ students at UBC to develop 8+ biomedical projects collaborating with hospitals and medical organizations.'\n          }\n        />\n      </SimpleGrid>\n    </Box>\n  );\n}\n","import {\n  Stack,\n  Container,\n  Box,\n  Text,\n  Heading,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport Typical from 'react-typical';\nimport IntroDetails from './IntroDetails';\nimport { motion } from 'framer-motion';\n\nexport default function Intro() {\n  return (\n    <Box\n      bg={useColorModeValue('dark', 'light')}\n      position={'center'}\n      minH={'60px'}\n      py={{ base: 2 }}\n      px={{ base: 4 }}\n      borderBottom={3}\n      borderStyle={'solid'}\n      borderColor={useColorModeValue('gray.200', 'gray.900')}\n    >\n      <Container maxW={'7xl'} zIndex={10} center>\n        <Stack direction={{ base: 'column', lg: 'row' }}>\n          <Stack\n            flex={1}\n            color={useColorModeValue('dark', 'light')}\n            justify={{ lg: 'center' }}\n            py={{ base: 4, md: 20, xl: 40 }}\n          >\n            <Box mb={{ base: 8, md: 20 }}>\n              <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.8 }}>\n                <Heading\n                  bgGradient=\"linear(to-l, teal.200,cyan.500,blue.500)\"\n                  bgClip=\"text\"\n                  mb={5}\n                  fontSize={{ base: '5xl', md: '6xl' }}\n                  fontWeight=\"extrabold\"\n                  textTransform={'uppercase'}\n                >\n                  <Typical steps={['', 500, 'Hello World!', 1000]} />\n                </Heading>\n              </motion.div>\n              <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.8 }}>\n                <Heading\n                  bgGradient=\"linear(to-l, blue.400,blue.500)\"\n                  bgClip=\"text\"\n                  fontFamily={'heading'}\n                  textTransform={'uppercase'}\n                  mb={3}\n                  fontSize={'2xl'}\n                  fontWeight=\"extrabold\"\n                >\n                  I'm Alessandro\n                </Heading>\n              </motion.div>\n\n              <Box>\n                <Text\n                  fontSize={'xl'}\n                  color={useColorModeValue('dark', 'light')}\n                  marginInline={10}\n                >\n                  I'm a software engineer and Engineer-In-Training in Vancouver\n                  who loves coding impactful projects to make the world a better\n                  place. I graduated from the University of British Columbia\n                  with a B.ASc in Electrical Engineering. I'm passionate about\n                  machine learning, medical technology, and economics.\n                </Text>\n              </Box>\n            </Box>\n            <IntroDetails />\n          </Stack>\n        </Stack>\n      </Container>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = (props) => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport {\n  Box,\n  Flex,\n  Text,\n  IconButton,\n  Button,\n  Stack,\n  Collapse,\n  Icon,\n  Link,\n  useColorModeValue,\n  useBreakpointValue,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport { HamburgerIcon, CloseIcon, ChevronDownIcon } from '@chakra-ui/icons';\nimport {\n  motion,\n  useViewportScroll,\n  useSpring,\n  useTransform,\n} from 'framer-motion';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport './styles.css';\n\n//TODO: fix the y scroller placement on nav bar\nconst CircleIndicator = () => {\n  const [isComplete, setIsComplete] = useState(false);\n  const { scrollYProgress } = useViewportScroll();\n  const yRange = useTransform(scrollYProgress, [0, 0.9], [0, 1]);\n  const pathLength = useSpring(yRange, { stiffness: 400, damping: 90 });\n\n  useEffect(() => yRange.onChange((v) => setIsComplete(v >= 1)), [yRange]);\n\n  return (\n    <svg\n      className=\"progress-icon\"\n      viewBox=\"0 0 60 60\"\n      width=\"100%\"\n      height=\"100%\"\n      preserveAspectRatio\n    >\n      <motion.path\n        fill=\"none\"\n        strokeWidth=\"5\"\n        stroke=\"#3182CE\"\n        strokeDasharray=\"0 1\"\n        d=\"M 0, 20 a 20, 20 0 1,0 40,0 a 20, 20 0 1,0 -40,0\"\n        style={{\n          pathLength,\n          rotate: 90,\n          translateX: 5,\n          translateY: 5,\n          scaleX: -1, // Reverse direction of line animation\n        }}\n      />\n      <motion.path\n        fill=\"none\"\n        strokeWidth=\"5\"\n        stroke=\"#3182CE\"\n        d=\"M14,26 L 22,33 L 35,16\"\n        initial={false}\n        strokeDasharray=\"0 1\"\n        animate={{ pathLength: isComplete ? 1 : 0 }}\n      />\n    </svg>\n  );\n};\n\nexport default function NavBar() {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Box position=\"sticky\" top={0} zIndex={10}>\n      <Flex\n        bg={useColorModeValue('gray.50', 'gray.900')}\n        color={useColorModeValue('gray.700', 'gray.200')}\n        minH={'60px'}\n        py={{ base: 2 }}\n        px={{ base: 4 }}\n        borderBottom={2}\n        borderStyle={'solid'}\n        borderColor={useColorModeValue('gray.200', 'gray.900')}\n        align={'center'}\n      >\n        <IconButton\n          onClick={onToggle}\n          icon={\n            isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\n          }\n          variant={'ghost'}\n          aria-label={'Toggle Navigation'}\n        />\n\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\n          <Text\n            textAlign={useBreakpointValue({ base: 'center', md: 'left' })}\n            textTransform={'uppercase'}\n            fontFamily={'heading'}\n            paddingLeft={4}\n            color=\"blue.500\"\n            fontWeight=\"extrabold\"\n          >\n            Alessandro Narciso\n          </Text>\n        </Flex>\n\n        <Stack direction={'row'} spacing={6}>\n          <Box>\n            <ColorModeSwitcher />\n          </Box>\n          <Box>\n            <Button\n              fontSize={'sm'}\n              fontWeight={600}\n              color={'white'}\n              bgGradient=\"linear(to-l, teal.300,blue.500)\"\n              _hover={{\n                bgGradient: 'linear(to-l, teal.500,blue.700)',\n              }}\n              onClick={sendMail}\n            >\n              Contact\n            </Button>\n          </Box>\n        </Stack>\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity>\n        <MobileNav />\n      </Collapse>\n    </Box>\n  );\n}\n\nconst MobileNav = () => {\n  return (\n    <Stack\n      bg={useColorModeValue('white', 'gray.800')}\n      p={4}\n      display={{ md: 'flex' }}\n    >\n      {NAV_ITEMS.map((navItem) => (\n        <MobileNavItem key={navItem.label} {...navItem} />\n      ))}\n    </Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href }) => {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        as={Link}\n        href={href ?? '#'}\n        justify={'space-between'}\n        align={'center'}\n        _hover={{\n          textDecoration: 'none',\n        }}\n      >\n        <Text\n          fontWeight={600}\n          color={useColorModeValue('gray.600', 'gray.200')}\n        >\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={'all .25s ease-in-out'}\n            transform={isOpen ? 'rotate(180deg)' : ''}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: '0!important' }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={'solid'}\n          borderColor={useColorModeValue('gray.200', 'gray.700')}\n          align={'start'}\n        >\n          {children &&\n            children.map((child) => (\n              <Link key={child.label} py={2} href={child.href}>\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\nconst NAV_ITEMS = [\n  {\n    label: 'Coming Soon',\n    children: [\n      {\n        label: 'Coming Soon',\n        href: '#',\n      },\n      {\n        label: 'Coming Soon',\n        href: '#',\n      },\n    ],\n  },\n];\n\nconst sendMail = () => {\n  const mailto = 'mailto:anarciso@alumni.ubc.ca?Subject=Hello';\n  window.location.href = mailto;\n};\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Stack,\n  Heading,\n  Text,\n  Badge,\n  Container,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\n\nexport default function ExpEntry({ job }) {\n  return (\n    <motion.div whileHover={{ scale: 1.03 }} whileTap={{ scale: 0.97 }}>\n      <Box\n        p={5}\n        shadow=\"xl\"\n        borderWidth=\"2px\"\n        color={useColorModeValue('gray.800', 'white')}\n        zIndex={1}\n      >\n        <Heading\n          fontSize=\"md\"\n          align=\"left\"\n          textTransform=\"uppercase\"\n          color=\"blue.500\"\n        >\n          {job.title} &bull; {job.company}\n        </Heading>\n\n        <Text\n          color=\"gray.500\"\n          fontWeight=\"semibold\"\n          letterSpacing=\"wide\"\n          fontSize=\"sm\"\n          textTransform=\"uppercase\"\n          color={useColorModeValue('gray.800', 'white')}\n          align=\"left\"\n        >\n          {job.start} - {job.end}\n        </Text>\n        <Text mt={4} align=\"left\" fontSize=\"md\">\n          {job.desc}\n        </Text>\n        <Container center centerContent>\n          <Stack paddingTop={5} spacing={2} direction={['column', 'row']}>\n            {job.techs.map((tech) => (\n              <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.8 }}>\n                <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"cyan\">\n                  {tech}\n                </Badge>\n              </motion.div>\n            ))}\n          </Stack>\n        </Container>\n      </Box>\n    </motion.div>\n  );\n}\n","import React from 'react';\nimport {\n  Box,\n  Stack,\n  Text,\n  Container,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport ExpEntry from './ExpEntry';\n\n//TODO: fix props into the Exp Entry components\n//TODO: instead of a long description, just short description of role, add skills instead ?\n\n//maxW on container controls the size of the cards\nexport default function Experience() {\n  return (\n    <Box\n      bg={useColorModeValue('dark', 'light')}\n      position={'center'}\n      minH={'60px'}\n      py={{ base: 2 }}\n      px={{ base: 4 }}\n      borderBottom={3}\n      borderStyle={'solid'}\n      borderColor={useColorModeValue('gray.200', 'gray.900')}\n    >\n      <Container maxW={'5xl'} zIndex={10} center>\n        <Stack direction={{ base: 'column', lg: 'row' }}>\n          <Stack\n            flex={1}\n            color={useColorModeValue('dark', 'light')}\n            justify={{ lg: 'center' }}\n            py={{ base: 4, md: 20, xl: 20 }}\n          >\n            <Intro />\n\n            <Box>\n              <Stack spacing={8}>\n                <ExpEntry job={jobs[0]} />\n                <ExpEntry job={jobs[1]} />\n                <ExpEntry job={jobs[2]} />\n                <ExpEntry job={jobs[3]} />\n                <ExpEntry job={jobs[4]} />\n                <ExpEntry job={jobs[5]} />\n                <ExpEntry job={jobs[6]} />\n              </Stack>\n            </Box>\n          </Stack>\n        </Stack>\n      </Container>\n    </Box>\n  );\n}\n\nfunction Intro() {\n  return (\n    <Box mb={{ base: 8, md: 20 }}>\n      <Text\n        bgGradient=\"linear(to-l, teal.300,blue.500)\"\n        bgClip=\"text\"\n        mb={3}\n        fontSize=\"2xl\"\n        fontWeight=\"extrabold\"\n        textTransform={'uppercase'}\n      >\n        Experience\n      </Text>\n\n      <Container centerContent>\n        <Text fontSize={'xl'} color={useColorModeValue('dark', 'light')}>\n          I have a strong background in software development and engineering.\n          Here are some of exciting places I've worked.\n        </Text>\n      </Container>\n    </Box>\n  );\n}\n\nconst jobs = [\n  {\n    id: 0,\n    title: 'Software Engineer',\n    company: 'TELUS',\n    start: '06/2020',\n    end: 'Present',\n    desc:\n      'Building and maintaining various full stack internal tools and APIs for customer order fulfillment. Utilizing deep learning and NLP to increase call center efficiency. Developed an initial augmented reality (AR) app for technicians to provide remote assistance to customers saving $2M annually in operating costs.',\n    techs: ['Full Stack', 'Back End', 'Cloud', 'DevOps', 'ML', 'AR'],\n  },\n  {\n    id: 1,\n    title: 'Technology Consultant',\n    company: 'Skills4Good',\n    start: '01/2021',\n    end: 'Present',\n    desc:\n      'Compiling documentation and research from academic papers to consult in the development of a standardized pipeline for auditing A.I. algorithms to prevent unfair and unethical discrimination and bias.',\n    techs: ['ML', 'AI Ethics', 'Research', 'Project Mgmt.'],\n  },\n  {\n    title: 'Leader of Tomorrow',\n    company: 'GapSummit 2020',\n    start: '01/2020',\n    end: '10/2020',\n    desc:\n      'Selected as a Leader of Tomorrow and one of the Top 100 Young Biotechnology Leaders in the World by Global Biotech Revolution. I attended the GapSummit 2020 conference at Cambridge University to participate in discussion with international academic and industry leaders about solving global gaps in biotechnology. ',\n    techs: ['Biotech', 'NLP', 'ML', 'Research'],\n  },\n  {\n    title: 'Chief Executive Officer',\n    company: 'UBC BEST',\n    start: '10/2015',\n    end: '03/2020',\n    desc:\n      'Led a team of 90 students at the UBC Biomedical Engineering Student Team (UBC BEST) in the development of 8 various and impactful medical technology projects for implementation in collaboration with hospitals and medical organizations.',\n    techs: ['Biotech', 'Full Stack', 'Project Mgmt.', 'Mentorship'],\n  },\n  {\n    title: 'ICT Engineering Co-op',\n    company: 'Huawei',\n    start: '05/2018',\n    end: '08/2018',\n    desc:\n      '1 of 10 Canadian engineering students chosen for Huawei Seeds for the Future Work Experience Program based on demonstrated excellent academic acumen and a submitted CV. Spent 3 weeks in Beijing and Shenzhen taking classes and learning about ICT, 5G, cloud, IoT, and AI at Huawei Training Centre.',\n    techs: ['Back End', 'Cloud', '5G'],\n  },\n  {\n    title: 'Electrical Controls Engineer Co-op',\n    company: 'Dynamic Attractions',\n    start: '09/2017',\n    end: '12/2018',\n    desc:\n      'Developed software via Python for testing and data collection of complex electrical and computer systems. Utilized MATLAB/Simulink in the design and testing of large-scale control systems.',\n    techs: ['Robotics', 'Back End', 'Data Analysis', 'Project Mgmt.'],\n  },\n  {\n    title: 'Research Assistant',\n    company: 'Gov. of Alberta, Dept. of Economic Development',\n    start: '06/2016',\n    end: '09/2016',\n    desc:\n      'Collected market research and analyzed data to identify niche investment and trade opportunities in international markets. Marketed Albertan exports and technology to attract foreign investment and trade in various technology sectors.',\n    techs: ['Data Analysis', 'Economics', 'Project Mgmt.'],\n  },\n];\n","import {\n  Stack,\n  Container,\n  Box,\n  Text,\n  SimpleGrid,\n  useColorModeValue,\n  Badge,\n} from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\n\nexport default function StatsGridWithImage() {\n  return (\n    <Box\n      bg={useColorModeValue('dark', 'light')}\n      position={'center'}\n      minH={'60px'}\n      py={{ base: 2 }}\n      px={{ base: 4 }}\n      borderBottom={3}\n      borderStyle={'solid'}\n      borderColor={useColorModeValue('gray.200', 'gray.900')}\n    >\n      <Container maxW={'7xl'} zIndex={10} center>\n        <Stack direction={{ base: 'column', lg: 'row' }}>\n          <Stack\n            flex={1}\n            color={useColorModeValue('dark', 'light')}\n            justify={{ lg: 'center' }}\n            py={{ base: 4, md: 20, xl: 20 }}\n          >\n            <Box mb={{ base: 8, md: 20 }}>\n              <Text\n                bgGradient=\"linear(to-l, teal.300,blue.500)\"\n                bgClip=\"text\"\n                mb={3}\n                fontSize=\"2xl\"\n                fontWeight=\"extrabold\"\n                textTransform={'uppercase'}\n              >\n                Skills\n              </Text>\n\n              <Container centerContent>\n                <Text\n                  fontSize={'xl'}\n                  color={useColorModeValue('dark', 'light')}\n                >\n                  I'm constantly exploring and learning new technologies. Here\n                  are some of the skills I've picked up along the way.\n                </Text>\n              </Container>\n            </Box>\n\n            <SimpleGrid columns={{ base: 1, md: 2 }} spacing={10}>\n              {stats.map((stat) => (\n                <Box key={stat.title}>\n                  <Text\n                    fontFamily={'heading'}\n                    fontWeight={700}\n                    textTransform={'uppercase'}\n                    mb={3}\n                    fontSize={'xl'}\n                    color={'blue.500'}\n                  >\n                    {stat.title}\n                  </Text>\n                  <Container center centerContent>\n                    <Stack\n                      spacing={2}\n                      direction={{\n                        base: 'column',\n                        md: 'column',\n                        lg: 'col',\n                        xl: 'row',\n                      }}\n                    >\n                      {stat.content.map((stat) => (\n                        <motion.div\n                          whileHover={{ scale: 1.1 }}\n                          whileTap={{ scale: 0.8 }}\n                        >\n                          <Badge\n                            colorScheme=\"linkedin\"\n                            borderRadius=\"full\"\n                            px=\"2\"\n                          >\n                            {stat}\n                          </Badge>\n                        </motion.div>\n                      ))}\n                    </Stack>\n                  </Container>\n                </Box>\n              ))}\n            </SimpleGrid>\n          </Stack>\n        </Stack>\n      </Container>\n    </Box>\n  );\n}\n\nconst stats = [\n  {\n    title: 'Languages',\n    content: [\n      'JavaScript',\n      'NodeJS',\n      'ReactJS',\n      'Python',\n      'TypeScript',\n      'C++',\n      'C#',\n    ],\n  },\n  {\n    title: 'Machine Learning',\n    content: [\n      'TensorFlow',\n      'Keras',\n      'SkLearn',\n      'Pandas',\n      'Numpy',\n      'BERT',\n      'OpenCV',\n    ],\n  },\n  {\n    title: 'Tools',\n    content: [\n      'Git',\n      'GCP',\n      'Docker',\n      'Kubernetes',\n      'MongoDB',\n      'Cassandra',\n      'Heroku',\n    ],\n  },\n  {\n    title: 'Other Tech',\n    content: ['Express', 'Jest', 'REST', 'GraphQL', 'Matlab', 'JIRA', 'Figma'],\n  },\n];\n","import {\n  chakra,\n  useColorModeValue,\n  VisuallyHidden,\n  Tooltip,\n} from '@chakra-ui/react';\n\nexport function SocialButton({ children, label, href }) {\n  return (\n    <chakra.button\n      bg={useColorModeValue('blackAlpha.100', 'whiteAlpha.100')}\n      rounded={'full'}\n      w={8}\n      h={8}\n      cursor={'pointer'}\n      as={'a'}\n      href={href}\n      display={'inline-flex'}\n      alignItems={'center'}\n      justifyContent={'center'}\n      transition={'background 0.3s ease'}\n      _hover={{\n        bg: useColorModeValue('blackAlpha.200', 'whiteAlpha.200'),\n      }}\n    >\n      <VisuallyHidden>{label}</VisuallyHidden>\n      {children}\n    </chakra.button>\n  );\n}\n\nexport function ToolTipSocialButton({\n  children,\n  label,\n  href,\n  tipColor,\n  tipLabel,\n}) {\n  return (\n    <Tooltip hasArrow label={tipLabel} bg={tipColor} color=\"white\">\n      <chakra.button\n        bg={useColorModeValue('blackAlpha.100', 'whiteAlpha.100')}\n        rounded={'full'}\n        w={8}\n        h={8}\n        cursor={'pointer'}\n        as={'a'}\n        href={href}\n        display={'inline-flex'}\n        alignItems={'center'}\n        justifyContent={'center'}\n        transition={'background 0.3s ease'}\n        _hover={{\n          bg: useColorModeValue('blackAlpha.200', 'whiteAlpha.200'),\n        }}\n      >\n        <VisuallyHidden>{label}</VisuallyHidden>\n        {children}\n      </chakra.button>\n    </Tooltip>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/lora-product.fb70c0a7.png\";","export default __webpack_public_path__ + \"static/media/cancer-detection.f7297bb6.png\";","export default __webpack_public_path__ + \"static/media/capstone-proj.3e8085d4.png\";","export default __webpack_public_path__ + \"static/media/restaurater.0231b343.png\";","import React from 'react';\nimport {\n  Box,\n  Badge,\n  Container,\n  Image,\n  useColorModeValue,\n  Stack,\n} from '@chakra-ui/react';\nimport { FaGithub } from 'react-icons/fa';\nimport { ToolTipSocialButton } from './SocialButton';\nimport loraImage from '../assets/lora-product.png';\nimport cancerImage from '../assets/cancer-detection.png';\nimport capstoneImage from '../assets/capstone-proj.png';\nimport restauraterImage from '../assets/restaurater.png';\nimport { motion } from 'framer-motion';\n\n//TODO: fix the props between Projects.js and the Card\n//TODO: fix image props - prob import from here cause path is weird (?)\n//TODO: *fix the stack of the badges\nexport default function ProjectCard({ project }) {\n  if (project.imageUrl === 'capstoneImage') {\n    project.imageUrl = capstoneImage;\n  } else if (project.imageUrl === 'loraImage') {\n    project.imageUrl = loraImage;\n  } else if (project.imageUrl === 'cancerImage') {\n    project.imageUrl = cancerImage;\n  } else if (project.imageUrl === 'restaurater') {\n    project.imageUrl = restauraterImage;\n  }\n\n  return (\n    <Box\n      borderWidth=\"2px\"\n      borderRadius=\"lg\"\n      alignItems=\"center\"\n      boxShadow=\"xl\"\n      borderColor={useColorModeValue('gray.200', 'gray.700')}\n    >\n      <Stack>\n        <Image\n          src={project.imageUrl}\n          alt={project.imageAlt}\n          align=\"center\"\n          object-fit=\"contain\"\n        />\n      </Stack>\n\n      <Box p=\"6\">\n        <Box\n          bgGradient=\"linear(to-l, teal.300,blue.500)\"\n          bgClip=\"text\"\n          mb={3}\n          fontSize=\"l\"\n          fontWeight=\"extrabold\"\n          textTransform={'uppercase'}\n        >\n          {project.title}\n        </Box>\n\n        <Box\n          as=\"span\"\n          color={useColorModeValue('gray.800', 'white')}\n          fontSize=\"sm\"\n        >\n          {project.description}\n        </Box>\n        <Container center centerContent>\n          <Stack\n            spacing={2}\n            justify={{ base: 'center', md: 'center' }}\n            paddingTop={5}\n            direction={['column', 'row']}\n          >\n            {project.skills.map((skill) => (\n              <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.8 }}>\n                <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n                  {skill}\n                </Badge>\n              </motion.div>\n            ))}\n          </Stack>\n        </Container>\n        <Stack\n          direction={'row'}\n          spacing={6}\n          justify={{ base: 'center', md: 'center' }}\n          paddingTop={5}\n        >\n          <ToolTipSocialButton\n            label={'Github'}\n            href={project.githubLink}\n            tipColor=\"teal.400\"\n            tipLabel={project.isRepo ? 'View Repo' : 'Private Repo'}\n          >\n            <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.8 }}>\n              <FaGithub />\n            </motion.div>\n          </ToolTipSocialButton>\n        </Stack>\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\nimport {\n  Stack,\n  Container,\n  Box,\n  Text,\n  useColorModeValue,\n  Tabs,\n  TabList,\n  Tab,\n  TabPanels,\n  TabPanel,\n} from '@chakra-ui/react';\nimport ProjectCard from './ProjectCard';\n\n// container scales the entire project card size using maxW prop\nexport default function Projects() {\n  return (\n    <Box\n      bg={useColorModeValue('dark', 'light')}\n      position={'center'}\n      borderBottom={3}\n      borderStyle={'solid'}\n      borderColor={useColorModeValue('gray.200', 'gray.900')}\n    >\n      <Container\n        maxW={{ base: '3xl', md: '4xl', xl: '4xl' }}\n        zIndex={10}\n        center\n      >\n        <Stack direction={{ base: 'column', lg: 'row' }}>\n          <Stack\n            flex={1}\n            color={useColorModeValue('dark', 'light')}\n            justify={{ lg: 'center' }}\n            py={{ base: 4, md: 20, xl: 20 }}\n          >\n            <Box mb={{ base: 8, md: 20 }}>\n              <Text\n                bgGradient=\"linear(to-l, teal.300,blue.500)\"\n                bgClip=\"text\"\n                mb={3}\n                fontSize=\"2xl\"\n                fontWeight=\"extrabold\"\n                textTransform={'uppercase'}\n              >\n                Projects\n              </Text>\n\n              <Container centerContent>\n                <Text\n                  fontSize={'xl'}\n                  color={useColorModeValue('dark', 'light')}\n                >\n                  I love working with emergent technologies to build awesome\n                  stuff. Here are some projects I've had a lot of fun building.\n                </Text>\n              </Container>\n            </Box>\n\n            <Box>\n              <Text fontSize={'l'} color={useColorModeValue('dark', 'light')}>\n                <Project />\n              </Text>\n            </Box>\n          </Stack>\n        </Stack>\n      </Container>\n    </Box>\n  );\n}\n\n// less than 4 or 5 techs or will exit card on mobile\nconst projects = [\n  {\n    id: 0,\n    imageUrl: 'loraImage',\n    imageAlt: 'Smart Garden System',\n    skills: ['AWS', 'C', 'JavaScript', 'Arduino', 'Electrical'],\n    title: 'LoRa Smart Gardener',\n    tabTitle: 'Smart Gardener',\n    description:\n      'Using an Arduino microcontroller to monitor the UBC Rose Garden plant health through a variety of sensors and outputting real time data of plant vitals transmitted through LoRa on a JavaScript website with an AWS DynamoDB back end.',\n    isRepo: true,\n    githubLink: 'https://github.com/alessnarciso/smartgardener',\n  },\n  {\n    id: 1,\n    imageUrl: 'restaurater',\n    imageAlt: 'App FrontEnd',\n    skills: ['ReactJS', 'NodeJS', 'MongoDB', 'Heroku', 'Microservices'],\n    title: 'Restaurant Rater App',\n    tabTitle: 'Restaurater',\n    description:\n      'Developed MERN web app for users to share and keep track of restaurants they’ve been to using Google’s Maps and Geocoding API. Implemented authentication and authorization to handle login sessions, secure password storage, and safe data transfer using JSON web tokens and password hashing.',\n    isRepo: false,\n  },\n  {\n    id: 2,\n    imageUrl: 'cancerImage',\n    imageAlt: 'Image of AUC ROC Curve',\n    skills: ['Python', 'TensorFlow', 'Sk-Learn', 'Pandas'],\n    title: 'Cancer Detection Using ML',\n    tabTitle: 'Cancer Detection',\n    description:\n      'Predicting if breast cancer tumors are malignant or benign using machine learning. The most accurate solutions were the basic shallow neural network and the linear regression classifier. This had an test accuracy of around 98% and an AUC of about 0.99 in the test data AUC ROC curve.',\n    isRepo: true,\n    githubLink: 'https://github.com/alessnarciso/ml-cancer-detection',\n  },\n  {\n    id: 3,\n\n    imageUrl: 'capstoneImage',\n    imageAlt: 'Capstone Project',\n    skills: ['Python', 'TensorFlow', 'Keras', 'Numpy', 'Hardware'],\n    title: 'Video Fall Detection Using DL',\n    tabTitle: 'Fall Detection',\n    description:\n      'Video fall detection using deep learning. Built custom LRCN (long-term recurrent convolutional neural network) architecture onboarded onto an NVIDIA processor to detect falls accurately in real time for health and safety in homes. Awarded UBC Applied Science Faculty Award for Best Capstone Project in ECE.',\n    isRepo: false,\n  } /*\n  {\n    id: 4,\n    imageUrl: 'cancerImage',\n    imageAlt: 'Image of AUC ROC Curve',\n    skills: ['Python', 'TensorFlow', 'Sk-Learn', 'Pandas'],\n    title: 'Cancer Detection Using ML',\n    tabTitle: 'Cancer Detection',\n    description:\n      'Predicting if breast cancer tumors are malignant or benign using machine learning. The most accurate solutions were the basic shallow neural network and the linear regression classifier. This had an test accuracy of around 98% and an AUC of about 0.99 in the test data AUC ROC curve.',\n    isRepo: true,\n    githubLink: 'https://github.com/alessnarciso/ml-cancer-detection',\n  },*/,\n];\n\nconst projectData = [\n  {\n    label: projects[0].tabTitle,\n    content: (\n      <>\n        <ProjectCard project={projects[0]} />\n      </>\n    ),\n  },\n  {\n    label: projects[1].tabTitle,\n    content: (\n      <>\n        <ProjectCard project={projects[1]} />\n      </>\n    ),\n  },\n  {\n    label: projects[2].tabTitle,\n    content: (\n      <>\n        <ProjectCard project={projects[2]} />\n      </>\n    ),\n  },\n  {\n    label: projects[3].tabTitle,\n    content: (\n      <>\n        <ProjectCard project={projects[3]} />\n      </>\n    ),\n  } /*\n  {\n    label: projects[4].tabTitle,\n    content: (\n      <>\n        <ProjectCard project={projects[4]} />\n      </>\n    ),\n  },*/,\n];\n\nfunction Project() {\n  function DataTabs({ data }) {\n    return (\n      <Tabs size=\"sm\" isFitted variant=\"enclosed\">\n        <TabList overflowX=\"auto\">\n          {data.map((tab, index) => (\n            <Tab key={index} _hover={{ color: 'white', bg: 'blue.500' }}>\n              {tab.label}\n            </Tab>\n          ))}\n        </TabList>\n        <TabPanels>\n          {data.map((tab, index) => (\n            <TabPanel p={4} key={index}>\n              {tab.content}\n            </TabPanel>\n          ))}\n        </TabPanels>\n      </Tabs>\n    );\n  }\n  return <DataTabs data={projectData} />;\n}\n","import { Box, Container, Stack, useColorModeValue } from '@chakra-ui/react';\nimport { FaGithub, FaLinkedin } from 'react-icons/fa';\nimport { SocialButton } from './SocialButton';\nimport { motion } from 'framer-motion';\n\nexport default function Footer() {\n  return (\n    <Box\n      bg={useColorModeValue('gray.50', 'gray.900')}\n      color={useColorModeValue('gray.700', 'gray.200')}\n    >\n      <Container\n        as={Stack}\n        maxW={'6xl'}\n        py={6}\n        direction={{ base: 'column', md: 'row' }}\n        spacing={4}\n        justify={{ base: 'center', md: 'center' }}\n        align={{ base: 'center', md: 'center' }}\n      >\n        <Stack\n          direction={'row'}\n          spacing={6}\n          justify={{ base: 'center', md: 'center' }}\n        >\n          <SocialButton\n            label={'Github'}\n            href={'https://www.github.com/alessnarciso/'}\n          >\n            <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.8 }}>\n              <FaGithub />\n            </motion.div>\n          </SocialButton>\n          <SocialButton\n            label={'LinkedIn'}\n            href={'https://www.linkedin.com/in/alessandronarciso/'}\n          >\n            <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.8 }}>\n              <FaLinkedin />\n            </motion.div>\n          </SocialButton>\n        </Stack>\n      </Container>\n    </Box>\n  );\n}\n","import React from 'react';\nimport Intro from '../components/Intro';\nimport NavBar from '../components/NavBar';\nimport Experience from '../components/Experience';\nimport Skills from '../components/Skills';\nimport Projects from '../components/Projects';\nimport Footer from '../components/Footer';\n\nexport default function Homepage() {\n  return (\n    <div>\n      <NavBar />\n      <Intro />\n      <Experience />\n      <Skills />\n      <Projects />\n      <Footer />\n    </div>\n  );\n}\n","import React from 'react';\nimport { ChakraProvider, Box, Fade, extendTheme } from '@chakra-ui/react';\nimport Homepage from './pages/Homepage';\n\nfunction App() {\n  // set to default dark mode\n  const config = {\n    initialColorMode: 'dark',\n    useSystemColorMode: false,\n  };\n\n  // render theme\n  const theme = extendTheme({ config });\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Box textAlign=\"center\" fontSize=\"xl\" flexBasis={['auto', '45%']}>\n        <Fade in>\n          <Homepage />\n        </Fade>\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}